
What the software needs to do:
    
    *** We'll call this the "FORWARD DIRECTION" ***
    1) Given a part geometry, stress profile, and cutting path, it must 
       estimate the part deformation.

    *** We'll call this the "BACKWARD DIRECTION" ***
    2) Given a part initial geometry, a cutting path, and the final part 
       geometry, it must estimate the residual stress profile which caused the
       deformation.

    *** We'll call this the "STRESS ESTIMATE ERROR" *** 
    3) Given an initial part geometry, an estimated initial residual stress
       profile, a cutting path, and a known final part geometry, it must compute
       an error measure associated with the estimated initial residual stress
       pattern.

    4) Have an option to visualize each of these processes.

    5) Run with and without real life measurement data. When there is no data
       available from real life, then this software will need to lean on FEM.
       For example, it will be necessary to impart a randomized residual stress 
       pattern on the part, simulate all the cuts in FEM and use the results
       as the ground truth, etc. Without real life measurements, we rely on FEM
       for ground truth.


INPUTS:
Forward Direction:
    1) Part Geometry. 
    2) Stress Profile. 
    3) Cutting Path.

Backward Direction:
    1) Initial part geometry. 
    2) Final (post-deformation) part geometry. 
    3) Cutting Path.


OUTPUTS:
Forward Direction:
    1) Part Geometry.

Backward Direction:
    1) Stress Profile.


DATA FORMATS:
    Part Geometry       - Set of vertices in some coordinate system.
                          Alternatively, the same part geometry representation 
                            that Abaqus CAE generates when a part is built. This
                            will make things easier to use at first. 
    Stress Profile      - 3x3 tensor for finite number of points in part.
                          Alternatively, there will be some predefined stress
                            profiles like "Shot Peened", "Uneven Cooling", etc.
                            which will each have some parameters.
    Cutting Path        - Unclear what final representation will be. For now,
                            it is assumed that it is a set of vertices which 
                            live in the same coordinate system as the part.
                          Like the part geometry, an alternative representation
                            will be offered which will allow the cutting path
                            to be constructed in Abaqus CAE.


SOFTWARE STRUCTURE:
                                          
Classes:
    
    machining_process:
        Data Members:
            part:
                A current snapshot of the part being machined. 
            part_history:
                The evolution of the part during machining. 
            cuts:
                The past and future cuts which makeup the machining 
                process. 
            in_sim:
                A flag indicating if the machining process is
                happening in real life or if it is all happening
                in simulation. When there are measurements from the
                real world, there will be two parallel represenations
                of the part: that predicted from the Abaqus
                simulations and that measured in the real world.
        Function Members:
            __init__():
                Requires a part object to be passed in and an
                indication if the machining process is happening
                entirely in simulation or not.
            sim_next_cut():
                Simulate the next cut in the specified cutting
                sequence. The result of the simulation is stored in
                the part representation.
            sim_speculative_cut():
                Simulate a passed in cut. This is used to evaluate
                how a potential cut will affect the part geometry.
                This method does not affect the state of the part
                representation and returns the part state in the
                Abaqus native format. Will be extended to support
                sequences of potential cuts.
            estimate_stress_via_last_cut():
                Use the deformation which resulted from the last cut
                to recover as much information as possible about
                the residual stress state which existed in the part
                BEFORE the last cut happened. This function uses the
                best information available about the part geometry. In
                other words, real world part measurements are
                preferred to Abaqus native part representations.
                Ultimately this method will apply some technique in
                Abaqus, so translation to an Abaqus native
                representation will be necessary.
                Residual stress state information is stored in the
                stress state history repository. Note that the
                stress information recovered via this method must
                be interpreted in the context of part's geometry
                before the cut was made.


    part:
        Data Members:
            part_representation:
                A representation of the part. 
            stress_profile:
                A representation of the part's stress profile. 
            material_properties:
                The part's properties.                  
        Function Members:
            __init__():
                Construct a part out of a vertex list.
            __init__():
                Construct a part out of a Abaqus CAE file.
            update_part_with_real_data():
                Real world data was collected on the part geometry,
                presumably via a camera or a Lidar system. This
                function updates the part represenation based on
                this real data.


    shot_peened_aluminum_bar (derived from part):
        Functions Members:
            __init__():
                Constructs a aluminum bar via some dimensionality 
                restrictions and pre-set material properties, imparts
                a host-peening like stress profile onto the bar.


    aluminum_fin (derived from part):
        Member Functions:
            __init__():
                Constructs a aluminum fin via some dimensionality
                restrictions and pre-set material properties. 

    
    part_history:
        Data Members:
            part_representation_history:
                Keeping track of the part throughout the machining
                process. Basically a list of part representations.
            stress_profile_history:
                Keeping track of the estimated stress profiles in 
                the part throughout the machining process. Basically
                a list of stress profiles.


    part_representation:
        Data Members:
            vertex_rep:
                A vertex based representation of the part. This
                might be how the part is initially represented and
                if there is real measurement data available, this
                is probably the form of that real measurement data.
            abaqus_rep:
               An Abaqus based representation of the part. Necessary
               when there is no ground truth aka everything is being
               done in simulation.
    

    representation_history:
        Data Members:
            vertex_rep_history:
                A history of the vertex based representations of the
                part.
            abaqus_rep_history:
                A history of the abaqus based representations of the
                part. 


    stress_profile:
        Data Members:
            endowed_initial_stress_profile:
                Coordinate, stress tensor pairs which are endowed
                on the part before any cuts are made.
                The source of this could be an estimate of the material
                preparation process, a history based estimate, or a
                one-off randomized initialization. 
            cut_estimated_stress_profile:
                Coordinate, stress tensor pairs which were estimated
                via the cutting process.
            non_cut_estimated_stress_profile:
                Coordinate, stress tensor pairs which were generated
                by some interpolation or history lookup process. A
                representation of residual stress which is not exclusively
                derived from the cutting process.
        Function Members:
            __init__():
                Sets the initial stress profile via some technique. 
                Note that a user should never directly modify the 
                stress profile information other than the initial 
                stress profile. 
    

    stress_profile_history:
        Data Members:
            cut_estimated_stress_profile_history:
                Keep track of the stress profiles which were
                estimated by cuts of the part.
            non_cut_estimated_stress_profile_history:
                Keep track of the stress profiles which were estimated
                via some method other than looking at the post-cut
                deformation.


    cuts:
        Data Members:
            cuts_done:
                The cuts which have been performed on the part.
                Basically a list of cuts.
            cuts_todo:
                The cuts which are scheduled for this part. Another
                list of cuts.
        Function Members:
            add_cuts():
                Adds cuts to cuts_todo. Does some cut sanity checking,
                but this is a bit tricky in general.
            

    cut:
        Data Members:
            cut_representation:
                A representation of the cut. The cut is really a
                representation of the path that the tool will take,
                and is only coincidentally related to the part.


    rect_cut (derived from cut):
        Function Members:
            __init__():
                Build a new cut object which is a rectangular prism.
                This is the first type of cut that we will consider.


    material_properties:
        Data Members:
            material_properties:
                Elastic material properties. 
        
        Function Members:
            set_material_props():
                Self explanatory.
             

Non-Class Utilities:
    Visualization
        - Visualizing part representation, stress profiles, cut sequences,
          etc.
    Error Measurement and Error Minimization
        - Quantifying the closeness of two part geometries. Minimizing error
          to ensure an accurate reconstruction of the stresses which caused
          a particular deformation.
    Back Calculating Stress Via Deformation Measures
        - Given two part geometries, one pre-cut and one post-cut, estimate the
          stress which caused any deformation.
        - Integrating these stress estimates into a full part stress profile.
    Abaqus Simulation Engine Interfacing
        - 
    File Management
        - Managing the files produced by the simulations, any measured data,
          etc. systematically.




File Structure:
    
    core_machining/
        machining.py
        part.py
        cuts.py
        stress.py
    visualization/
        visualize_part.py
    stress_estimation/
        backcalc_stress.py
        integrate_stress.py
    abaqus/
    util/
        file_management.py
    storage/
                

