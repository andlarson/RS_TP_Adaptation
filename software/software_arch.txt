
What the software needs to do:
    
    *** We'll call this the "FORWARD DIRECTION" ***
    1) Given a part geometry, stress profile, and cutting path, it must 
       estimate the part deformation.

    *** We'll call this the "BACKWARD DIRECTION" ***
    2) Given a part initial geometry, a cutting path, and the final part 
       geometry, it must estimate the residual stress profile which caused the
       deformation.

    *** We'll call this the "STRESS ESTIMATE ERROR" *** 
    3) Given an initial part geometry, an estimated initial residual stress
       profile, a cutting path, and a known final part geometry, it must compute
       an error measure associated with the estimated initial residual stress
       pattern.

    *** We'll call this "VISUALIZATION" ***
    4) Have an option to visualize each of these processes.



INPUTS:
Forward Direction:
    1) Part Geometry. 
    2) Stress Profile. 
    3) Cutting Path.

Backward Direction:
    1) Initial part geometry. 
    2) Final (post-deformation) part geometry. 
    3) Cutting Path.


OUTPUTS:
Forward Direction:
    1) Part Geometry.

Backward Direction:
    1) Stress Profile.


DATA FORMATS:
    Part Geometry       - Set of vertices in some coordinate system.
                          Alternatively, the same part geometry representation 
                            that Abaqus CAE generates when a part is built. This
                            will make things easier to use at first. 
    Stress Profile      - 3x3 tensor for finite number of points in part.
                          Alternatively, there will be some predefined stress
                            profiles like "Shot Peened", "Uneven Cooling", etc.
                            which will each have some parameters.
    Cutting Path        - Unclear what final representation will be. For now,
                            it is assumed that it is a set of vertices which 
                            live in the same coordinate system as the part.
                          Like the part geometry, an alternative representation
                            will be offered which will allow the cutting path
                            to be constructed in Abaqus CAE.


SOFTWARE DIRECTORY STRUCTURE:
    geometry/
        part_specification.py      -> Predefined basic part geometries, such as
                                        fins and bars.
                                      Part geometry checking.                     
                                      Material properties specification.
        cut_specification.py       -> Cut specification for different cut types.
                                      Cut sequencing.
                                      Cut visualization before FEM analysis.
                                      Cut consistency checking.
                                      Notes: 
                                        1) Cannot specify all cuts since
                                           deformation changes part geometry.
                                           Will need some input-output system
                                           which allows deformation to be
                                           used to influence choice of next cut.
    stress/
        stress_profile.py          -> Predefined basic stress profiles.
                                      Stress interpolation for not-fully-defined
                                        stress profiles.
                                      Equilibrium measurement.
                                      Stress profile visualization.
    estimate_stress/
        stress_estimate.py         -> Specify technique to back calculate residual
                                        stress.
    error/
        deform_error_meas.py       -> Error measurement for estimated vs. actual
                                        deformation.
    abaqus/
        abaqus_runner.py           -> Multi-step simulation management. 
                                        
        abaqus_visualization.py    -> Visualization control.
    util/
        file_management.py         -> Bespoke file management for intermediates
                                        and experiments.



